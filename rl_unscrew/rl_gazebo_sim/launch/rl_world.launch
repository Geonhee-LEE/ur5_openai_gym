<?xml version="1.0"?>
<!-- Launches the Gazebo world rl_world.
      The rl_world has a UR5 robot with a screw tool on and the world is fitted with
      a work piece consisting of a blue block and a red screw. 
      This world is inteded for training reinforcement leraning algorithms for 
      unscrewing processes. 
      
      Created by group 18gr660 on Aalborg University.
-->

<launch>
      <!-- variables making it easy to set prameters as needed. -->
      <arg name="paused" default="false"/>
      <arg name="gui" default="true"/>
      
      <!-- We resume the logic in empty_world.launch, 
           changing only the name of the world to be launched -->
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <!-- Find this packages and put in the wold-->
            <arg name="world_name" value="$(find rl_gazebo_sim)/worlds/simple.world"/>
            <!-- Change the default parameters -->
            <arg name="paused" value="$(arg paused)"/>
            <arg name="gui" value="$(arg gui)"/>
      </include>
     
      <!-- Send robot urdf to param server.
            Since the robot is described in Xacro the file needs to be 
            prased by the xacro package -->
      <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find rl_gazebo_sim)/ur5_robot_w_tool/ur5_robot_w_tool.urdf.xacro'" />
      
      <!-- Spawn the loaded robot_description in Gazebo.
           The -J tag is used to set joint values.
           Currently there is a bug preventing the -J tag to not work as intended.
           Future updates will hopfulle fix this bug  -->
      <node name="spawn_gazebo_model" 
            pkg="gazebo_ros" 
            type="spawn_model" 
            args="-urdf -param robot_description -model robot -z 1.005 
                  -J shoulder_pan_joint 1
                  -J shoulder_lift_joint -1.5707
                  -J elbow_joint 1.5707
                  -J wrist_1_joint -1.5707
                  -J wrist_2_joint -1.5707
                  -J wrist_3_joint 0" 
            respawn="false"
            output="screen" 
      />   
      <!-- respawn = false means dont respawn the spawner node again. -->   
      
      <!-- Load the ur5_controller.yaml file to the parameter server-->
      <rosparam file="$(find rl_gazebo_sim)/ur5_robot_w_tool/ur5_controller.yaml" command="load"/>
      
      <!-- Start all the controllers from the ur5_controller.yaml file.-->
      <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" 
            args="joint_state_controller arm_controller screw_controller" respawn="false" />
      <node pkg="rl_gazebo_sim" type="reset_robot.py" name="reset_robot_service_spawner" output="screen"/> 

</launch>

